version: '3.7'

x-app-service-template: &app
  build: rails_app
  image: sheepdog-rails-app:1.0
  volumes:
    - ./rails_app:/app
    - /app/tmp

services:
  rails:
    <<: *app
    depends_on:
      - 'postgres'
      - 'redis'
      - 'sidekiq'
      - 'webpacker'
    tty: true
    stdin_open: true
    ports:
      - '5000:5000'
    env_file:
      - './rails_app/.env'

  postgres:
    image: 'postgres:12.2'
    environment:
      POSTGRES_USER: 'sheepdog'
      POSTGRES_PASSWORD: 'password'
    ports:
      - '5432:5432'
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: 'redis:4.0.11-alpine'
    command: ["redis-server", "--requirepass", "password", "--appendonly", "yes"]
    ports:
      - '6379:6379'
    volumes:
      - redis:/data
    sysctls:
      # https://github.com/docker-library/redis/issues/35
      net.core.somaxconn: '511'

  sidekiq:
    <<: *app
    depends_on:
      - 'postgres'
      - 'redis'
    command: sidekiq -C config/sidekiq.yml
    env_file:
      - './rails_app/.env'

  webpacker:
    <<: *app
    depends_on:
      - 'postgres'
      - 'redis'
    command: bin/webpack-dev-server
    ports:
      - '3035:3035'
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - RAILS_ENV=${RAILS_ENV:-development}
      - WEBPACKER_DEV_SERVER_HOST=0.0.0.0

  grafana:
    image: grafana/grafana:5.2.4
    depends_on:
      - prometheus
    ports:
      - 3000:3000/tcp
    volumes:
      - ./grafana_db:/var/lib/grafana
    user: "1"

  prometheus:
    image: prom/prometheus:v2.4.3
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090/tcp
    depends_on:
      - rails

    command:
      - --config.file=/etc/prometheus/prometheus.yml

  rails_stressor:
    build: rails_stressor
    image: rails_stressor
    depends_on:
      - rails
    command: -z 2m -c 15 -m GET http://rails:5000

volumes:
  redis:
  postgres:
  web:
